--------------------------------------------------------
--  OLAP Queries
--------------------------------------------------------

--Q1: DISPLAY PRODUCT_NAME AND TOTAL_SALES FOR THE PRODUCT ACHIEVED MAXIMUM SALES AMOUNT IN DECEMBER 2019
SELECT *
FROM
(
    SELECT PRODUCT_NAME, F.TOTAL_SALES
    FROM D_PRODUCTS INNER JOIN
    (
        SELECT PRODUCT_ID,SUM(TOTAL_SALE) AS TOTAL_SALES
        FROM F_SALES
        WHERE TO_CHAR(F_SALES.D_DATE,'MON') = 'DEC'
        GROUP BY PRODUCT_ID
        ORDER BY TOTAL_SALES DESC
    ) F ON D_PRODUCTS.PRODUCT_ID = F.PRODUCT_ID
)
WHERE ROWNUM = 1;


--Q2: DISPLAY THE TOP3 OUTLETS THAT GENERATE THE HIGHEST SALES AMOUNT FOR THE WHOLE YEAR
SELECT *
FROM
(   SELECT  D_OUTLET.OUTLET_NAME, F.TOTAL_SALES,
    RANK() OVER(
    ORDER BY F.TOTAL_SALES DESC
    ) AS RANK
    FROM D_OUTLET INNER JOIN
    (
        SELECT OUTLET_ID,SUM(TOTAL_SALE) AS TOTAL_SALES
        FROM F_SALES
        WHERE D_DATE >= TO_DATE('01/01/2019','DD/MM/YYYY')
        AND D_DATE <= TO_DATE('31/12/2019','DD/MM/YYYY')
        GROUP BY OUTLET_ID
    ) F ON D_OUTLET.OUTLET_ID = F.OUTLET_ID
)
WHERE RANK < 4;

--Q3: CREATE A MAERIALIZED VIEW CALLED "OUTLETANALYSIS_MV" THAT PRESENTS HE PRODUCT-WISE SALES ANALYSIS FOR EACH OUTLET
DROP MATERIALIZED VIEW OUTLETANALYSIS_MV;

CREATE MATERIALIZED VIEW OUTLETANALYSIS_MV
    BUILD IMMEDIATE
    REFRESH ON
    COMMIT
ENABLE QUERY REWRITE AS
    SELECT D_OUTLET.OUTLET_ID,D_PRODUCTS.PRODUCT_ID,
           SUM(F_SALES.TOTAL_SALE) AS "SUM(OUTLET_TOTAL)"
    FROM F_SALES,D_OUTLET,D_PRODUCTS
    WHERE F_SALES.OUTLET_ID = D_OUTLET.OUTLET_ID
    AND F_SALES.PRODUCT_ID = D_PRODUCTS.PRODUCT_ID
    GROUP BY D_OUTLET.OUTLET_ID,D_PRODUCTS.PRODUCT_ID
    ORDER BY D_OUTLET.OUTLET_ID,D_PRODUCTS.PRODUCT_ID;
-- Display MV
SELECT * FROM OUTLETANALYSIS_MV;


--Q4: DETERMINE THE SUPPLIER NAME FOR THE MOST POPULAR PRODUCT FOR OUTLET "S-4"
SELECT D_SUPPLIERS.SUPPLIER_NAME
FROM F_SALES,D_SUPPLIERS
WHERE F_SALES.SUPPLIER_ID = D_SUPPLIERS.SUPPLIER_ID
AND F_SALES.PRODUCT_ID = (
    SELECT PRODUCT_ID
    FROM(
        SELECT *
        FROM OUTLETANALYSIS_MV
        WHERE OUTLET_ID = 'S-4'
        ORDER BY "SUM(OUTLET_TOTAL)" DESC
        )
    WHERE ROWNUM = 1
)
GROUP BY D_SUPPLIERS.SUPPLIER_NAME;


--Q5: THINK ABOUT WHAT INFORMATION CAN BE RETRIEVED BY USING ROLLUP OR CUBE
--1)	TOP N AND BOTTOM N STORES FOR TOTAL SALES
--2)	TOP N AND BOTTOM N PRODUCTS FOR TOTAL SALES
--3)	TOTAL SALES FOR ANY PRODUCT
--4)	TOTAL SALES FOR ANY STORE
